name: version-update
description: Github Action for Updating Versions

inputs:
  github_token:
    description: Github Token for git commit or gh pr create
    required: true
  workspaces:
    default: ".:text"
    description: Paths to the workspaces (separated by comma)
  version_message:
    default: version pull request
    description: Version pull request message
  no_pr:
    description: Use pull request to increase the version
  target_branch:
    description: Branch to save the version changes to (pull request or direct commit)
    default: main

outputs:
  tag:
    description: Tag to have been pushed
    value: "${{ steps.push_new_version.outputs.tag || steps.git_create_tag.outputs.tag || '' }}"
  status:
    description: Status of the version increase
    value: "${{ (steps.push_new_version.outcome == 'success' || steps.git_create_tag.outcome == 'success') && 'success' || 'failed' }}"

runs:
  using: "composite"
  steps:
    # Gathering Generic Data
    #

    - name: Git Prerequisites
      id: git_prerequisites
      run: |
        source ${{ github.workspace }}/src/logging.sh
        source ${{ github.workspace }}/src/utils.sh
        source ${{ github.workspace }}/src/git.sh
        
        source ${{ github.workspace }}/src/package_version_detect.sh
        source ${{ github.workspace }}/src/package_name_detect.sh
        source ${{ github.workspace }}/src/project.sh

        git_get_commit_message --store
        git_get_last_created_tag --store
        gather_workspaces_info --workspaces "${{ inputs.workspaces }}" --store
      shell: bash

    # Gathering Version Increase Data
    #

    - name: Workspace Prerequisites
      id: ws_prerequisites
      if: ${{ github.event_name == 'push' }}
      run: |
        source ${{ github.workspace }}/src/logging.sh
        source ${{ github.workspace }}/src/utils.sh
        
        source ${{ github.workspace }}/src/package_version_detect.sh
        source ${{ github.workspace }}/src/package_name_detect.sh
        source ${{ github.workspace }}/src/project.sh

        gather_changed_workspaces_info \
          --workspaces "${{ inputs.workspaces }}" \
          --tag "${{ steps.git_prerequisites.outputs.last_tag }}" \
          --store
      shell: bash

    # Increasing Version
    #

    - name: Increase Version and Commit the Changes
      id: version_increase
      if: ${{ github.event_name == 'push' }}
      run: |
        source ${{ github.workspace }}/src/logging.sh
        source ${{ github.workspace }}/src/utils.sh
        source ${{ github.workspace }}/src/git.sh
        source ${{ github.workspace }}/src/version.sh

        source ${{ github.workspace }}/src/package_version_detect.sh
        source ${{ github.workspace }}/src/package_version_update.sh
        source ${{ github.workspace }}/src/project.sh

        increase_workspaces_versions \
          --workspaces-info "${{ steps.ws_prerequisites.outputs.changed_workspaces_info }}" \
          --commit-message "${{ steps.git_prerequisites.outputs.commit_message }}" \
          --tag "${{ steps.git_prerequisites.outputs.last_tag }}" \
          --store
      shell: bash

    - name: Set up Git with Authentication
      env:
        GH_TOKEN: ${{ inputs.github_token }}
      if: ${{ github.event_name == 'push' && steps.ws_prerequisites.outputs.changed_workspaces_info != steps.version_increase.outputs.updated_workspaces_info }}
      run: |
        source ${{ github.workspace }}/src/logging.sh
        source ${{ github.workspace }}/src/utils.sh
        source ${{ github.workspace }}/src/git.sh

        source ${{ github.workspace }}/src/package_version_detect.sh
        source ${{ github.workspace }}/src/package_version_update.sh
        source ${{ github.workspace }}/src/project.sh

        git_setup_user

        update_workspaces_versions --workspaces-info "${{ steps.version_increase.outputs.updated_workspaces_info }}"
        
        # Configure git with authentication token
        git config --global url."https://x-access-token:${{ inputs.github_token }}@github.com/".insteadOf "https://github.com/"
      shell: bash

    - name: Push new Version via Pull Request or Direct Commit
      env:
        GH_TOKEN: ${{ inputs.github_token }}
      id: push_new_version
      if: ${{ github.event_name == 'push' && steps.ws_prerequisites.outputs.changed_workspaces_info != steps.version_increase.outputs.updated_workspaces_info }}
      run: |
        source ${{ github.workspace }}/src/logging.sh
        source ${{ github.workspace }}/src/utils.sh
        source ${{ github.workspace }}/src/git.sh

        source ${{ github.workspace }}/src/package_version_detect.sh
        source ${{ github.workspace }}/src/package_version_update.sh
        source ${{ github.workspace }}/src/project.sh

        updated_version=$(echo "${{ steps.version_increase.outputs.updated_workspaces_info }}" | 
          awk -F';' '{print $1}' | 
          awk -F':' '{ print $NF }')
    
        echo "tag=${commit_message}"
        echo "tag<<EOF" >> $GITHUB_OUTPUT
        echo "${tag}" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT

        changelog=$(git_build_changelog \
          --last-tag "${{ steps.git_prerequisites.outputs.last_tag }}" \
          --format markdown --group-by-type)

        if [[ -z "${{ inputs.no_pr }}" ]]; then
          git_create_version_branch \
            --version "${updated_version}" \
            --merge-branch "${{ inputs.target_branch }}" \
            --pr-title "${{ inputs.version_message }} ${updated_version}" \
            --pr-message "$changelog"
        else
          git_commit_version_changes \
            --version "${updated_version}" \
            --branch "${{ inputs.target_branch }}" \
            --title "${{ inputs.version_message }} ${updated_version}" \
            --message "${{ inputs.version_message }} ${updated_version}" \
            --changelog "$changelog"
        fi
      shell: bash

    # Create Git Tag
    #

    - name: Create Git Tag
      env:
        GH_TOKEN: ${{ inputs.github_token }}
      id: git_create_tag
      if: ${{ github.event_name == 'push' && contains(steps.git_prerequisites.outputs.commit_message, inputs.version_message) }}
      run: |
        source ${{ github.workspace }}/src/logging.sh
        source ${{ github.workspace }}/src/utils.sh
        source ${{ github.workspace }}/src/git.sh

        source ${{ github.workspace }}/src/package_version_detect.sh
        source ${{ github.workspace }}/src/package_version_update.sh
        source ${{ github.workspace }}/src/project.sh

        git_setup_user

        updated_version=$(echo "${{ steps.git_prerequisites.outputs.workspaces_info }}" | awk -F';' '{print $1}' | awk -F':' '{ print $NF }')

        git_create_tag \
          --version "${updated_version}" \
          --tag-message "${{ inputs.version_message }} ${updated_version}"
    
        echo "tag=${commit_message}"
        echo "tag<<EOF" >> $GITHUB_OUTPUT
        echo "v${tag}" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT
      shell: bash
